---
import { marked } from 'marked'
import { twMerge } from 'tailwind-merge'
import { executeQuery } from '../lib/datocms.js'
interface Props {
  ContainerClasses?: string
  TextClasses?: string
  HeadingClasses?: string
}

const {
  ContainerClasses = '',
  TextClasses = '',
  HeadingClasses,
}: Props = Astro.props

const baseContainerClasses = 'w-full'
const mergedContainerClasses = twMerge(baseContainerClasses, ContainerClasses)

const baseTextClasses = 'prose font-merri items-center base-content'
const mergedTextClasses = twMerge(baseTextClasses, TextClasses)

const baseHeadingClasses =
  'prose text-xl font-gokhan text-secondary-content tracking-wider'
const mergedHeadingClasses = twMerge(baseHeadingClasses, HeadingClasses)

const { home } = (await executeQuery(`query Homepage { 
    home { lfcond
           lfimages {
            id
            url
            alt
      }} }`)) as {
  home?: {
    lfcond?: string
    lfimages?: Array<{
      id: string
      url: string
      alt?: string
    }>
  }
}

const lf_images = home?.lfimages ?? []
const lf_cond = home?.lfcond ?? ''
const lfconditions = marked(lf_cond)
---

<div class="order-3">
  <h1 class={mergedHeadingClasses}>Lost and Found</h1>
  <div class="flex flex-row items-center gap-x-6">
    <!-- The button to open modal -->
        <div class={mergedTextClasses}>
          Miss something? <br>
          Have a look in the 
          <label
            for="lfModal"
            class="underline underline-offset-4 hover:no-underline cursor-pointer"
          >
            box</label
          >. 
        </div>
      
        <!-- Arrow SVG  -->
        <svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" viewBox="0 0 1248 364" class="h-4 w-auto mb-10"><path fill-rule="evenodd" d="M-7032 1342.4c8.2 0 16.5-.7 24.6.2 14.4 1.7 23.9 10.9 24.8 22.7 1 12-6.8 22.4-20.7 26.4q-8.8 2.5-18 2.8c-60 3.9-119.5 11-179.2 17.2a247 247 0 0 1-39 1.1 63 63 0 0 1-22.8-5c-7.2-3.3-15.3-6.9-15.9-15.7-.5-8 6.4-12.9 12.3-17.3a74 74 0 0 1 37.8-13l196-20.3zm-296.6 54.9a20.4 20.4 0 0 1-20.3 20.9 20.5 20.5 0 0 1-21-20.3 20.7 20.7 0 0 1 20.4-21 20.5 20.5 0 0 1 20.9 20.4M-4356.2 2627c8.5-5 11.8-10.8 15.8-15.8 93.4-117 204.7-212.1 339.7-278 120.1-58.8 246.8-92.5 381.1-92 123.4.3 241 26.7 350.6 84.6 41.5 22 79.3 48.7 112.6 81.8 8.6 8.6 18.5 15.9 27.5 24 6.5 6 9 13.3 3.3 21s-13.5 7.4-20.7 2.2c-48.8-35.2-104-58-158.2-82.8a703 703 0 0 0-302.6-65.3 771 771 0 0 0-362.7 94.4c-120.7 65.2-223.1 152.3-310.6 257.5a157 157 0 0 0-7.2 9.4q-.5 1-.8 2.5c4 2.7 7.4-.5 10.8-1.6 51.8-16.3 102.6-36.2 154.9-51 8-2.3 16-4.3 24.2-5.2 11.1-1.3 20.8 2.3 27 12.2 6.2 10.3 5.2 20.8-.7 31a54 54 0 0 1-20.8 19.4c-14 7.9-28 16-42.6 22.5-68.3 30.8-136.6 61.3-207.2 86.5a240 240 0 0 1-50.2 13.7c-44 5.7-67.6-23.8-54.5-65.7a2948 2948 0 0 1 98.2-269.7c4.5-10.5 8.4-22.2 23.3-19.9 10.5 1.7 15.5 13 14 30.2-2.5 28.4-11.4 55.3-20.1 82.3-7.5 23-15.4 46-24.1 71.8m586.8-473.8c24.6-.2 38.8 8 40.4 20.8 1.6 12.6-10.4 25.3-29.6 29.5-14 3-28.3 4.6-42.5 6.8a451 451 0 0 0-190 75.2c-5.3 3.6-11 7.2-16.9 9.6-10.5 4.3-20.8 3.6-28.6-5.6-7.6-9.2-6.4-19.3-1-29.3a46 46 0 0 1 13.1-14.3c77-57.1 164.8-84.5 255.1-92.7m120.1 18.5a19.6 19.6 0 0 1-19.2 20.3 19.5 19.5 0 0 1-20-19.4 20 20 0 0 1 20-19.7 19 19 0 0 1 19.2 18.8M1019.5 177.3c-58.7-30.2-113-67.3-170.2-99.6-15.9-9-32.1-17.6-46-29.8-7.1-6.3-15.6-13-11.2-24.1s15-12.3 25.3-12c23.6.5 45 9 66 18.8C920.4 48 955.7 68.8 992 88c66.2 35 135.1 64.6 199 103.7a171 171 0 0 1 29.7 21.3c18.7 17.9 15.7 42.8-7 55.4a86 86 0 0 1-21.8 8.2c-95.9 22.2-191.5 45.4-288 63.6A1104 1104 0 0 1 777 356.8a67 67 0 0 1-13-.2c-9.4-1.1-16.6-5.5-19-15.3-2.6-10.3 2-18 10.5-23 15.6-9 33.1-13.1 50.1-18.6 65.1-21 131.6-36.6 198.7-49.7 4.5-1 9.5-1 13.4-4 .5-3-1.8-2.7-3.2-3-175.3-40.5-352.6-42.8-530.9-28.5-115.1 9.1-229.4 23.7-341.5 52.2-27.8 7-55.4 15-83.2 22-12.2 3.2-24.6 6.5-37.3 5.6-15-.9-20.5-12.3-11.9-24.6a77 77 0 0 1 28.7-22.1c32.4-17.2 67.2-28.6 102-40 85.3-27.9 173.6-39.2 262.5-49a2354 2354 0 0 1 386.9-13c72.7 4 144.5 15 215.8 29z"/>
        </svg>
    <div class="group w-18 h-18 mb-2 hover:scale-125 transition-transform duration-600" >
      <label for="lfModal" class="cursor-pointer">
        <!-- BOX SVG -->
    
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 500 500"
            xml:space="preserve"
            class=""
            ><path
              fill="currentColor"
              class="group-hover:fill-accent transition-colors duration-900"
              d="M498 133.5 334 38.2a4 4 0 0 0-4 0l-82 47.6a4 4 0 1 0 4 7l80-46.5 156 90.6-74 43.3-144.3-84a4 4 0 0 0-4 6.9L412 188.3a4 4 0 0 0 4 0l82-48a4 4 0 0 0 0-6.8"
            ></path><path
              fill="currentColor"
              class="group-hover:fill-accent transition-colors duration-900"
              d="M253.5 278.1a4 4 0 0 0-5.5-1.4l-80 46.7-156-91 74-43L226 271a4 4 0 1 0 4-7L88 181.5a4 4 0 0 0-4 0L2 229a4 4 0 0 0 0 7l164 95.5a4 4 0 0 0 4 0l82-48a4 4 0 0 0 1.5-5.4"
            ></path><path
              fill="currentColor"
              class="group-hover:fill-accent transition-colors duration-900"
              d="m498 229-82-47.6a4 4 0 1 0-4 7l76 44-156 91-80-46.7a4 4 0 1 0-4 6.9l82 47.9a4 4 0 0 0 4 0L498 236a4 4 0 0 0 0-6.9"
            ></path><path
              fill="currentColor"
              class="group-hover:fill-accent transition-colors duration-900"
              d="M399 193.6a4 4 0 0 0-5.5-1.5L248 276.7a4 4 0 1 0 4 6.9L397.5 199a4 4 0 0 0 1.5-5.5M250 86a4 4 0 0 0-4 4v171.7a4 4 0 1 0 8 0V90a4 4 0 0 0-4-4"
            ></path><path
              fill="currentColor"
              d="M413.8 277.2a4 4 0 0 0-4 4v79.6L254 451.4V281.2a4 4 0 1 0-8 0v177.1a4 4 0 0 0 6 3.5l163.8-95.3a4 4 0 0 0 2-3.4v-82a4 4 0 0 0-4-4"
            ></path><path
              fill="currentColor"
              class="group-hover:fill-accent transition-colors duration-900"
              d="m252 85.8-82-47.6a4 4 0 0 0-4 0L2 133.5a4 4 0 0 0 0 6.9l82 47.9a4 4 0 0 0 5.4-1.4 4 4 0 0 0-1.4-5.5l-76-44.5 156-90.6 74 43-138 80.5a4 4 0 0 0 4 7l144.1-84a4 4 0 0 0 0-7"
            ></path>
            <path
              fill="currentColor"
              d="M250 277.2a4 4 0 0 0-4 4v170.2L90.3 361.3v-80.1a4 4 0 1 0-8 0v82.4a4
            4 0 0 0 2 3.4L248 461.8a4 4 0 0 0 6-3.5V281.2a4 4 0 0 0-4-4"
            ></path>
          </svg>
        </label>
      </div>
    </div>
    <div class={mergedTextClasses} set:html={lfconditions} />
  
  </div>


      
  <input type="checkbox" id="lfModal" class="modal-toggle" />

  <!-- Modal Overlay and Content -->
  <div id="imagesModal" class="modal" aria-modal="true" role="dialog">
    <div
      id="imagesModalContent"
      class="modal-box bg-base-100 p-6 rounded-lg shadow-xl max-h-[95vh] max-w-[30vw] flex flex-col items-center gap-5 relative group"
    >
      <!-- Carousel navigation triangles -->
      <div
        class="w-full flex justify-around items-end absolute left-0 right-0 bottom-10 px-10 z-10 pointer-events-none"
      >
      </div>
      <div class="carousel w-full max-w-2xl p-0">
        {
          lf_images.map((image, idx) => {
            const prevId = `slide${idx === 0 ? lf_images.length : idx}`
            const nextId = `slide${idx === lf_images.length - 1 ? 1 : idx + 2}`
            const thisId = `slide${idx + 1}`
            return (
              <div
                id={thisId}
                class="carousel-item relative w-full flex flex-col items-center"
              >
                <img
                  src={image.url}
                  alt={image.alt || 'Lost & Found item'}
                  class="rounded-box max-h-[80vh] w-auto object-contain mx-auto"
                  loading="lazy"
                />
                <div class="absolute pointer-events-none w-full flex justify-around items-end left-0 right-0 bottom-3 px-0 z-10">
                  <a
                    href={`#${prevId}`}
                    class="pointer-events-auto btn btn-circle bg-base-100/30 hover:bg-base-100/50 hover:scale-110 hover:text-accent transition-transform duration-600 border-none"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="2 0 24 24"
                      class="opacity-80"
                    >
                      <path
                        fill="currentColor"
                        d="m4.431 12.822l13 9A1 1 0 0 0 19 21V3a1 1 0 0 0-1.569-.823l-13 9a1.003 1.003 0 0 0 0 1.645"
                      />
                    </svg>
                  </a>
                  <a
                    href={`#${nextId}`}
                    class="pointer-events-auto btn btn-circle bg-base-100/30 hover:bg-base-100/50 hover:scale-110 hover:text-accent transition-transform duration-600 border-none"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      class="opacity-80"
                      viewBox="-2 0 24 24"
                    >
                      <path
                        fill="currentColor"
                        d="M5.536 21.886a1 1 0 0 0 1.033-.064l13-9a1 1 0 0 0 0-1.644l-13-9A1 1 0 0 0 5 3v18a1 1 0 0 0 .536.886"
                      />
                    </svg>
                  </a>
                </div>
              </div>
            )
          })
        }
      </div>
      <!-- close X button -->
      <label
        class="bg-base-100 p-2 rounded-md absolute top-2 right-2"
        for="lfModal"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6 hover:scale-110 hover:text-accent transition-transform duration-600"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </label>
    </div>
    <!-- DaisyUI click-away close: modal-backdrop -->
    <label for="lfModal" class="modal-backdrop"></label>
  </div>

</div>

<script is:inline define:vars={{ totalImages: lf_images.length }}>
  let current = 0
  const total = totalImages

  if (typeof window !== 'undefined') {
    // Function to check if modal is open
    function isModalOpen() {
      const modal = document.getElementById('lfModal')
      return modal && modal.checked
    }

    // Function to navigate to slide
    function goToSlide(slideIndex) {
      current = slideIndex
      location.hash = `#slide${current + 1}`
    }

    // Keyboard navigation
    window.addEventListener('keydown', (e) => {
      if (!isModalOpen()) return

      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {
        e.preventDefault()
        current = (current - 1 + total) % total
        goToSlide(current)
      } else if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {
        e.preventDefault()
        current = (current + 1) % total
        goToSlide(current)
      } else if (e.key === 'Escape') {
        // Close modal on Escape
        document.getElementById('lfModal').checked = false
      }
    })

    // Mouse wheel navigation
    window.addEventListener(
      'wheel',
      (e) => {
        if (!isModalOpen()) return

        // Check if the event target is within the modal
        const modalContent = document.getElementById('imagesModalContent')
        if (!modalContent || !modalContent.contains(e.target)) return

        e.preventDefault()

        if (e.deltaY > 0 || e.deltaX > 0) {
          // Scroll down/right - next image
          current = (current + 1) % total
          goToSlide(current)
        } else if (e.deltaY < 0 || e.deltaX < 0) {
          // Scroll up/left - previous image
          current = (current - 1 + total) % total
          goToSlide(current)
        }
      },
      { passive: false }
    )

    // Track current slide based on hash changes
    window.addEventListener('hashchange', () => {
      if (!isModalOpen()) return

      const hash = location.hash
      const match = hash.match(/slide(\d+)/)
      if (match) {
        current = parseInt(match[1]) - 1
      }
    })

    // Initialize current slide when modal opens
    document.getElementById('lfModal').addEventListener('change', (e) => {
      if (e.target.checked) {
        // Modal opened - go to first slide
        current = 0
        goToSlide(current)
      }
    })
  }
</script>
